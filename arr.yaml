name: psjh-epic-arr-ssl-lbvserver
description: "Epic ARR Server SSL Load-Balancing - Customized for PSJH Epic StyleBooks."
display-name: "Epic ARR Server SSL LB vServer StyleBook"
author: Nathan Joseph
namespace: com.psjh.epic.stylebooks
schema-version: "1.0" 
version: "1.0" 
import-stylebooks: 
  - 
    namespace: netscaler.nitro.config
    prefix: ns
    version: "11.1"
  - 
    namespace: com.psjh.epic.stylebooks
    prefix: psjh-epic
    version: "1.0"
parameters-default-sources:
  - psjh-epic::psjh-epic-lb-helper-params
  - psjh-epic::psjh-epic-ssl-helper-params
parameters: 
  -
    name: http-profile
    type: object
    label: "Optional HTTP Profile for the SSL LB vServer and Service Group Configuration."
    description: "Optionally provide the name of an HTTP Profile to bind to the SSL LB vServer and Service Group, or create a new one. May be needed for WebSocket support."
    required: false
    gui:
      collapse_pane: true
    parameters:
      -
        name: existing-httpprofile
        label: HTTP Profile Name for WebSockets
        description: "Name of an existing HTTP Profile to use for the configuration. Do not specify if you are adding a new HTTP Profile."
        type: string
        required: false
      -
        name: new-httpprofile
        label: "Create new HTTP Profile for WebSockets"
        description: "Create a new HTTP Profile to use for the configuration. Do not specify if you are providing an existing HTTP Profile."
        type: psjh-epic::psjh-epic-httpprofile-helper-params
        required: false
        gui:
          collapse_pane: true
substitutions:
  new-profile: $parameters.http-profile.new-httpprofile.name
  http-profile(existing-profile): if-then-else($existing-profile,$existing-profile,$substitutions.new-profile)
components:
  -
    name: arr-new-httpprofile
    condition: $parameters.http-profile.new-httpprofile
    type: psjh-epic::psjh-epic-httpprofile-helper-params
    properties-default-sources:
      - $parameters.http-profile.new-httpprofile
  -
    name: http-profile
    condition: $parameters.http-profile.existing-httpprofile or $parameters.http-profile.new-httpprofile
    type: string
    properties:
        name: $substitutions.http-profile($parameters.http-profile.existing-httpprofile)
  -
    name: arr-lbvserver-comp
    type: ns::lbvserver
    properties:
        name: str("lb_ARR_%{$parameters.AppDescription}%_SSL")
        servicetype: SSL
        ipv46: $parameters.ip
        port: 443
        lbmethod: ROUNDROBIN
        persistencetype: NONE
        tcpprofilename?: $parameters.vserver-tcp-profile
        httpprofilename?: $components.http-profile.properties.name
        redirectfromport?: $parameters.SSLRedirectPort
        httpsredirecturl?: $parameters.SSLRedirectURL
        comment: str("ARR SSL LB vServer Configuration - %{$parameters.AppDescription}%") 
    components:
      -
        name: arr-sslvserver-sslprofile
        type: ns::sslvserver
        condition: $parameters.SSLProfile
        properties:
          sslprofile: $parameters.SSLProfile
          vservername: $parent.properties.name
      -
        name: arr-servicegroup-comp
        type: ns::servicegroup
        properties:
          servicegroupname: str("svcg_ARR_%{$parameters.AppDescription}%_SSL")
          servicetype: SSL
          downstateflush: DISABLED
          sp: str("ON")
          useproxyport: str("YES")
          tcpprofilename?: $parameters.servicegroup-tcp-profile
          httpprofilename?: $components.http-profile.properties.name
          comment?: str("ARR SSL LB Service Group Configuration - %{$parameters.AppDescription}%") 
        components:
          -
            name: arr-lbvserver-svcg-binding
            type: ns::lbvserver_servicegroup_binding
            properties:
              name: $parent.parent.properties.name
              servicegroupname: $parent.properties.servicegroupname
          -
            name: arr-server-members
            type: ns::server
            repeat: $parameters.svc-servers
            repeat-item: server
            repeat-condition: $server.add-server
            properties:
              name: str("srv_%{$server.svc-name}%_%{$server.ip}%")
              ipaddress: $server.ip
          - 
            name: arr-svcg-ip-members
            type: ns::servicegroup_servicegroupmember_binding
            repeat: $parameters.svc-servers
            repeat-item: server
            properties: 
              servername: str("srv_%{$server.svc-name}%_%{$server.ip}%")
              port: 443
              servicegroupname: $parent.properties.servicegroupname
          -
            name: arr-monitor-svcg-binding-comp
            type: ns::servicegroup_lbmonitor_binding
            properties:
              servicegroupname: $parent.properties.servicegroupname
              monitor_name: str("https-ecv")
      - 
        name: vserver-certs-bindings
        type: psjh-epic::psjh-vserver-certs-binds
        condition: $parameters.certificates
        properties:
          certificates: $parameters.certificates
          vserver-name: $parent.properties.name
      - 
        name: vserver-certs-bindings-existing
        type: ns::sslvserver_sslcertkey_binding
        condition: $parameters.certificates-existing
        properties:
          certkeyname: $parameters.certificates-existing
          vservername: $parent.properties.name